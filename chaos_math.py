"""
These functions are enormous, pasted
complex functions from geogebra to find intersections in lines
and circles and such. the algebra is so complex that these functions are unreadable.
Trust that they work. do NOT try to understand them."""

from euclib import *
def find_circle_intersect(c1: Circle, c2: Circle):
    h, k, r = c1.center.x, c1.center.y, c1.radius
    w, q, s = c2.center.x, c2.center.y, c2.radius
    # the chaos is here!
    coords = [
        [
            (
                h ** (3)
                - (h ** (2) * w)
                + (h * k ** (2))
                - (((2 * h) * k) * q)
                + (h * q ** (2))
                - (h * r ** (2))
                + (h * s ** (2))
                - (h * w ** (2))
                + (k ** (2) * w)
                - (((2 * k) * q) * w)
                + (q ** (2) * w)
                + (r ** (2) * w)
                - (s ** (2) * w)
                + w ** (3)
                + (
                    ((-k) + q)
                    * sqrt(
                        (-(h ** (4)))
                        + ((4 * h ** (3)) * w)
                        - ((2 * h ** (2)) * k ** (2))
                        + (((4 * h ** (2)) * k) * q)
                        - ((2 * h ** (2)) * q ** (2))
                        + ((2 * h ** (2)) * r ** (2))
                        + ((2 * h ** (2)) * s ** (2))
                        - ((6 * h ** (2)) * w ** (2))
                        + (((4 * h) * k ** (2)) * w)
                        - ((((8 * h) * k) * q) * w)
                        + (((4 * h) * q ** (2)) * w)
                        - (((4 * h) * r ** (2)) * w)
                        - (((4 * h) * s ** (2)) * w)
                        + ((4 * h) * w ** (3))
                        - k ** (4)
                        + ((4 * k ** (3)) * q)
                        - ((6 * k ** (2)) * q ** (2))
                        + ((2 * k ** (2)) * r ** (2))
                        + ((2 * k ** (2)) * s ** (2))
                        - ((2 * k ** (2)) * w ** (2))
                        + ((4 * k) * q ** (3))
                        - (((4 * k) * q) * r ** (2))
                        - (((4 * k) * q) * s ** (2))
                        + (((4 * k) * q) * w ** (2))
                        - q ** (4)
                        + ((2 * q ** (2)) * r ** (2))
                        + ((2 * q ** (2)) * s ** (2))
                        - ((2 * q ** (2)) * w ** (2))
                        - r ** (4)
                        + ((2 * r ** (2)) * s ** (2))
                        + ((2 * r ** (2)) * w ** (2))
                        - s ** (4)
                        + ((2 * s ** (2)) * w ** (2))
                        - w ** (4)
                    )
                )
            )
            / (
                (2 * h ** (2))
                - ((4 * h) * w)
                + (2 * k ** (2))
                - ((4 * k) * q)
                + (2 * q ** (2))
                + (2 * w ** (2))
            ),
            (
                (h ** (2) * k)
                + (h ** (2) * q)
                - (((2 * h) * k) * w)
                - (((2 * h) * q) * w)
                + k ** (3)
                - (k ** (2) * q)
                - (k * q ** (2))
                - (k * r ** (2))
                + (k * s ** (2))
                + (k * w ** (2))
                + q ** (3)
                + (q * r ** (2))
                - (q * s ** (2))
                + (q * w ** (2))
                + (
                    (h - w)
                    * sqrt(
                        (-(h ** (4)))
                        + ((4 * h ** (3)) * w)
                        - ((2 * h ** (2)) * k ** (2))
                        + (((4 * h ** (2)) * k) * q)
                        - ((2 * h ** (2)) * q ** (2))
                        + ((2 * h ** (2)) * r ** (2))
                        + ((2 * h ** (2)) * s ** (2))
                        - ((6 * h ** (2)) * w ** (2))
                        + (((4 * h) * k ** (2)) * w)
                        - ((((8 * h) * k) * q) * w)
                        + (((4 * h) * q ** (2)) * w)
                        - (((4 * h) * r ** (2)) * w)
                        - (((4 * h) * s ** (2)) * w)
                        + ((4 * h) * w ** (3))
                        - k ** (4)
                        + ((4 * k ** (3)) * q)
                        - ((6 * k ** (2)) * q ** (2))
                        + ((2 * k ** (2)) * r ** (2))
                        + ((2 * k ** (2)) * s ** (2))
                        - ((2 * k ** (2)) * w ** (2))
                        + ((4 * k) * q ** (3))
                        - (((4 * k) * q) * r ** (2))
                        - (((4 * k) * q) * s ** (2))
                        + (((4 * k) * q) * w ** (2))
                        - q ** (4)
                        + ((2 * q ** (2)) * r ** (2))
                        + ((2 * q ** (2)) * s ** (2))
                        - ((2 * q ** (2)) * w ** (2))
                        - r ** (4)
                        + ((2 * r ** (2)) * s ** (2))
                        + ((2 * r ** (2)) * w ** (2))
                        - s ** (4)
                        + ((2 * s ** (2)) * w ** (2))
                        - w ** (4)
                    )
                )
            )
            / (
                (2 * h ** (2))
                - ((4 * h) * w)
                + (2 * k ** (2))
                - ((4 * k) * q)
                + (2 * q ** (2))
                + (2 * w ** (2))
            ),
        ],
        [
            (
                h ** (3)
                - (h ** (2) * w)
                + (h * k ** (2))
                - (((2 * h) * k) * q)
                + (h * q ** (2))
                - (h * r ** (2))
                + (h * s ** (2))
                - (h * w ** (2))
                + (k ** (2) * w)
                - (((2 * k) * q) * w)
                + (q ** (2) * w)
                + (r ** (2) * w)
                - (s ** (2) * w)
                + w ** (3)
                + (
                    (k - q)
                    * sqrt(
                        (-(h ** (4)))
                        + ((4 * h ** (3)) * w)
                        - ((2 * h ** (2)) * k ** (2))
                        + (((4 * h ** (2)) * k) * q)
                        - ((2 * h ** (2)) * q ** (2))
                        + ((2 * h ** (2)) * r ** (2))
                        + ((2 * h ** (2)) * s ** (2))
                        - ((6 * h ** (2)) * w ** (2))
                        + (((4 * h) * k ** (2)) * w)
                        - ((((8 * h) * k) * q) * w)
                        + (((4 * h) * q ** (2)) * w)
                        - (((4 * h) * r ** (2)) * w)
                        - (((4 * h) * s ** (2)) * w)
                        + ((4 * h) * w ** (3))
                        - k ** (4)
                        + ((4 * k ** (3)) * q)
                        - ((6 * k ** (2)) * q ** (2))
                        + ((2 * k ** (2)) * r ** (2))
                        + ((2 * k ** (2)) * s ** (2))
                        - ((2 * k ** (2)) * w ** (2))
                        + ((4 * k) * q ** (3))
                        - (((4 * k) * q) * r ** (2))
                        - (((4 * k) * q) * s ** (2))
                        + (((4 * k) * q) * w ** (2))
                        - q ** (4)
                        + ((2 * q ** (2)) * r ** (2))
                        + ((2 * q ** (2)) * s ** (2))
                        - ((2 * q ** (2)) * w ** (2))
                        - r ** (4)
                        + ((2 * r ** (2)) * s ** (2))
                        + ((2 * r ** (2)) * w ** (2))
                        - s ** (4)
                        + ((2 * s ** (2)) * w ** (2))
                        - w ** (4)
                    )
                )
            )
            / (
                (2 * h ** (2))
                - ((4 * h) * w)
                + (2 * k ** (2))
                - ((4 * k) * q)
                + (2 * q ** (2))
                + (2 * w ** (2))
            ),
            (
                (h ** (2) * k)
                + (h ** (2) * q)
                - (((2 * h) * k) * w)
                - (((2 * h) * q) * w)
                + k ** (3)
                - (k ** (2) * q)
                - (k * q ** (2))
                - (k * r ** (2))
                + (k * s ** (2))
                + (k * w ** (2))
                + q ** (3)
                + (q * r ** (2))
                - (q * s ** (2))
                + (q * w ** (2))
                + (
                    ((-h) + w)
                    * sqrt(
                        (-(h ** (4)))
                        + ((4 * h ** (3)) * w)
                        - ((2 * h ** (2)) * k ** (2))
                        + (((4 * h ** (2)) * k) * q)
                        - ((2 * h ** (2)) * q ** (2))
                        + ((2 * h ** (2)) * r ** (2))
                        + ((2 * h ** (2)) * s ** (2))
                        - ((6 * h ** (2)) * w ** (2))
                        + (((4 * h) * k ** (2)) * w)
                        - ((((8 * h) * k) * q) * w)
                        + (((4 * h) * q ** (2)) * w)
                        - (((4 * h) * r ** (2)) * w)
                        - (((4 * h) * s ** (2)) * w)
                        + ((4 * h) * w ** (3))
                        - k ** (4)
                        + ((4 * k ** (3)) * q)
                        - ((6 * k ** (2)) * q ** (2))
                        + ((2 * k ** (2)) * r ** (2))
                        + ((2 * k ** (2)) * s ** (2))
                        - ((2 * k ** (2)) * w ** (2))
                        + ((4 * k) * q ** (3))
                        - (((4 * k) * q) * r ** (2))
                        - (((4 * k) * q) * s ** (2))
                        + (((4 * k) * q) * w ** (2))
                        - q ** (4)
                        + ((2 * q ** (2)) * r ** (2))
                        + ((2 * q ** (2)) * s ** (2))
                        - ((2 * q ** (2)) * w ** (2))
                        - r ** (4)
                        + ((2 * r ** (2)) * s ** (2))
                        + ((2 * r ** (2)) * w ** (2))
                        - s ** (4)
                        + ((2 * s ** (2)) * w ** (2))
                        - w ** (4)
                    )
                )
            )
            / (
                (2 * h ** (2))
                - ((4 * h) * w)
                + (2 * k ** (2))
                - ((4 * k) * q)
                + (2 * q ** (2))
                + (2 * w ** (2))
            ),
        ],
    ]
    return Anchor(*coords[0]), Anchor(*coords[1])


def find_line_intersect(c1: Circle, l1: Line):
    m, b = l1.get_mxb()
    center = get_location(c1.center)
    h, k = center.x, center.y
    r = c1.radius
    # copy/pasted from geogebra
    # do NOT un-collapse these lines!
    x = [
        (
            ((-b) * m)
            + (m * k)
            + h
            - sqrt(
                (-(b ** (2)))
                - (((2 * b) * h) * m)
                + ((2 * b) * k)
                - (h ** (2) * m ** (2))
                + (((2 * h) * k) * m)
                - k ** (2)
                + (m ** (2) * r ** (2))
                + r ** (2)
            )
        )
        / (m ** (2) + 1),
        (
            ((-b) * m)
            + (m * k)
            + h
            + sqrt(
                (-(b ** (2)))
                - (((2 * b) * h) * m)
                + ((2 * b) * k)
                - (h ** (2) * m ** (2))
                + (((2 * h) * k) * m)
                - k ** (2)
                + (m ** (2) * r ** (2))
                + r ** (2)
            )
        )
        / (m ** (2) + 1),
    ]
    y = [
        (
            b
            + (h * m)
            + (m ** (2) * k)
            - (
                m
                * sqrt(
                    (-(b ** (2)))
                    - (((2 * b) * h) * m)
                    + ((2 * b) * k)
                    - (h ** (2) * m ** (2))
                    + (((2 * h) * k) * m)
                    - k ** (2)
                    + (m ** (2) * r ** (2))
                    + r ** (2)
                )
            )
        )
        / (m ** (2) + 1),
        (
            b
            + (h * m)
            + (m ** (2) * k)
            + (
                m
                * sqrt(
                    (-(b ** (2)))
                    - (((2 * b) * h) * m)
                    + ((2 * b) * k)
                    - (h ** (2) * m ** (2))
                    + (((2 * h) * k) * m)
                    - k ** (2)
                    + (m ** (2) * r ** (2))
                    + r ** (2)
                )
            )
        )
        / (m ** (2) + 1),
    ]
    return Anchor(x[0], y[0]), Anchor(x[1], y[1])